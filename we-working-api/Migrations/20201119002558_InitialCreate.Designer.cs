// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using we_working_api.Data;

namespace we_working_api.Migrations
{
    [DbContext(typeof(GestorContext))]
    [Migration("20201119002558_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("we_working_api.Model.ComentarioProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaComentario")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComentarioProyectos");
                });

            modelBuilder.Entity("we_working_api.Model.ComentarioTarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TareaEmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TareaEmpleadoProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TareaEmpleadoProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComentarioTareas");
                });

            modelBuilder.Entity("we_working_api.Model.EmpleadoProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EmpleadoProyectos");
                });

            modelBuilder.Entity("we_working_api.Model.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("LiderId")
                        .HasColumnType("int");

                    b.Property<string>("NombreProyecto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("we_working_api.Model.TareaEmpleadoProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoTarea")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TareaEmpleadoProyectos");
                });

            modelBuilder.Entity("we_working_api.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("we_working_api.Model.ComentarioProyecto", b =>
                {
                    b.HasOne("we_working_api.Model.Proyecto", "Proyecto")
                        .WithMany("ComentarioProyectos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("we_working_api.Model.Usuario", "Usuario")
                        .WithMany("ComentarioProyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("we_working_api.Model.ComentarioTarea", b =>
                {
                    b.HasOne("we_working_api.Model.TareaEmpleadoProyecto", "TareaEmpleadoProyecto")
                        .WithMany("ComentarioTareas")
                        .HasForeignKey("TareaEmpleadoProyectoId");

                    b.HasOne("we_working_api.Model.Usuario", null)
                        .WithMany("ComentarioTareas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TareaEmpleadoProyecto");
                });

            modelBuilder.Entity("we_working_api.Model.EmpleadoProyecto", b =>
                {
                    b.HasOne("we_working_api.Model.Proyecto", "Proyecto")
                        .WithMany("EmpleadoProyectos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("we_working_api.Model.Usuario", null)
                        .WithMany("EmpleadoProyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("we_working_api.Model.Proyecto", b =>
                {
                    b.HasOne("we_working_api.Model.Usuario", "Usuario")
                        .WithMany("Proyectos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("we_working_api.Model.TareaEmpleadoProyecto", b =>
                {
                    b.HasOne("we_working_api.Model.Proyecto", "Proyecto")
                        .WithMany("TareaEmpleadoProyectos")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("we_working_api.Model.Usuario", "Usuario")
                        .WithMany("TareaEmpleadoProyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("we_working_api.Model.Proyecto", b =>
                {
                    b.Navigation("ComentarioProyectos");

                    b.Navigation("EmpleadoProyectos");

                    b.Navigation("TareaEmpleadoProyectos");
                });

            modelBuilder.Entity("we_working_api.Model.TareaEmpleadoProyecto", b =>
                {
                    b.Navigation("ComentarioTareas");
                });

            modelBuilder.Entity("we_working_api.Model.Usuario", b =>
                {
                    b.Navigation("ComentarioProyectos");

                    b.Navigation("ComentarioTareas");

                    b.Navigation("EmpleadoProyectos");

                    b.Navigation("Proyectos");

                    b.Navigation("TareaEmpleadoProyectos");
                });
#pragma warning restore 612, 618
        }
    }
}
